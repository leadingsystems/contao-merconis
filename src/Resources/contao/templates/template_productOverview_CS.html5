<?php
	// use this to show the available output options:
	// echo $this->objProduct->_outputOptions;
	
	global $objPage;

    $this->objProduct->useOriginalData();

    $str_html_statusIcons = $this->objProduct->_useCustomTemplate('template_productIncludes_statusIcons_01');
?>
<div class="shopProduct <?php echo $this->productTemplateType; ?> <?php echo $this->productTemplate; ?> <?php echo $this->productPositionsClassString; ?> block">
	<div class="boxInnerWrapper">
		<?php // ##### IMAGE CONTAINER WITH NEW AND SALE ICONS ##### -> ?>
			<div class="imageContainer">
				<?php if ($this->objProduct->_hasMainImage) { ?>
					<a class="productMainImage boxImage" href="<?php echo $this->objProduct->_linkToProduct; ?>">
                        {{shopPicture::<?=$this->objProduct->getImageGallery()->getMainImage()->singleSRC?>?size=productOverview&class=productImage}}
                    </a>

                    <?php echo $str_html_statusIcons ?: ''; ?>
				<?php } ?>
			</div>
		<?php // <- ##### IMAGE CONTAINER WITH NEW AND SALE ICONS ##### ?>

		<div class="bottomWrapper">
			<?php // ##### TITLE ##### -> ?>
				<h2><a class="productTitle" href="<?php echo $this->objProduct->_linkToProduct; ?>"><?php echo $this->objProduct->_title; ?></a></h2>
			<?php // <- ##### TITLE ##### ?>

			<?php // ##### CURRENT PRICE ##### -> ?>
				<p class="currentPrice">
                    <?php

                    $float_cheapestPrice = null;
                    $str_cheapestPriceOutput = null;
                    $str_minQuantityInfo = null;
                    $bln_cheapestPriceComesFromScalePrices = false;

                    if ($this->objProduct->_hasVariants) {
                        foreach ($this->objProduct->_variants as $obj_variant){
                            if (!is_array($obj_variant->_scalePricesOutputUnconfigured)) {
                                if (!$float_cheapestPrice || $obj_variant->_priceAfterTax < $float_cheapestPrice) {
                                    $bln_cheapestPriceComesFromScalePrices = false;
                                    $float_cheapestPrice = $obj_variant->_priceAfterTax;
                                    $str_cheapestPriceOutput = null;
                                    $str_minQuantityInfo = null;
                                }
                            } else {
                                foreach ($obj_variant->_scalePricesOutputUnconfigured as $arr_scalePriceDetails) {
                                    if (!$float_cheapestPrice || $arr_scalePriceDetails['priceUnconfiguredUnformatted'] < $float_cheapestPrice) {
                                        $bln_cheapestPriceComesFromScalePrices = true;
                                        $float_cheapestPrice = $arr_scalePriceDetails['priceUnconfiguredUnformatted'];
                                        $str_cheapestPriceOutput = $arr_scalePriceDetails['priceUnconfigured'];
                                        $str_minQuantityInfo = $arr_scalePriceDetails['minQuantity'];
                                    }
                                }
                            }
                        }
                    } else {
                        if (is_array($this->objProduct->_scalePricesOutputUnconfigured)) {
                            $bln_cheapestPriceComesFromScalePrices = true;
                            foreach ($this->objProduct->_scalePricesOutputUnconfigured as $arr_scalePriceDetails) {
                                if (!$float_cheapestPrice || $arr_scalePriceDetails['priceUnconfiguredUnformatted'] < $float_cheapestPrice) {
                                    $float_cheapestPrice = $arr_scalePriceDetails['priceUnconfiguredUnformatted'];
                                    $str_cheapestPriceOutput = $arr_scalePriceDetails['priceUnconfigured'];
                                    $str_minQuantityInfo = $arr_scalePriceDetails['minQuantity'];
                                }
                            }
                        }
                    }

                    if (!$bln_cheapestPriceComesFromScalePrices) {
                        // Standard-Ausgabe
                        if ($this->objProduct->_unscaledPricesAreDifferent) { ?><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['from']; ?> <?php } ?><?php echo $this->objProduct->_unscaledPriceMinimumAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit) { ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php }
                    } else {
                        ?>
                        <?= $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['from'] ?> <?= $str_cheapestPriceOutput ?><?php if ($this->objProduct->_hasQuantityUnit) { ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php } ?><span class="min-quantity-info"> (<?= $str_minQuantityInfo ?>)</span>
                        <?php
                    }
                    ?>
				</p>
			<?php // <- ##### CURRENT PRICE ##### ?>

			<?php // ##### OLD PRICE ##### -> ?>
				<?php if ($this->objProduct->_hasOldPrice) { ?>
					<p class="oldPrice">
						<?php if ($this->objProduct->_oldPricesAreDifferent) { ?><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['from']; ?> <?php } ?><?php echo $this->objProduct->_priceOldMinimumAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit) { ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php } ?>
					</p>
				<?php } ?>
			<?php // <- ##### OLD PRICE ##### ?>
		</div>
	</div>
</div>