<?php
global $objPage;
$obj_tmp_productOrVariant = null;
if ($this->objProduct->_variantIsSelected) {
	$obj_tmp_productOrVariant = $this->objProduct->_selectedVariant;
} else {
	$obj_tmp_productOrVariant = $this->objProduct;
}
?>

<div class="priceContainer">
    <?php if ($obj_tmp_productOrVariant->_hasOldPrice) { ?>
        <div class="oldPrice">
            <?php
            /*
             * Either a variant is selected or, if it isn't, the product does not have different old variant prices. In both cases we have a precise old price to display
             */
            if ($this->objProduct->_variantIsSelected || !$this->objProduct->_oldPricesAreDifferent) {
                ?>
                <?php echo $obj_tmp_productOrVariant->_priceOldAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit): ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?>
                <?php
            }

            /*
             * No variant is selected and the product has different old variant prices which means that we have to show something like "from [minimum old price]"
             */
            else {
                ?>
                <?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['from']; ?> <?php echo $obj_tmp_productOrVariant->_priceOldMinimumAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit): ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?>
                <?php
            }
            ?>
        </div>
    <?php } ?>

    <div class="currentPrice">
		<?php // unscaled price output -> ?>
		<div class="unscaledSinglePrice">
			<?php
			if (
					// we have a configuration which affects the price
					$obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator
			) {
				?>
				<div class="basePrice">
					<span class="label"><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['basePrice']; ?>:</span>
					<span class="value"><?php echo $obj_tmp_productOrVariant->_unscaledPriceBeforeConfiguratorAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit): ?> / <?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?></span>
				</div>
				<div class="configuratorPrice">
					<span class="label"><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['configuratorPrice']; ?>:</span>
					<span class="value"><?php echo $obj_tmp_productOrVariant->_unscaledPriceModificationByConfiguratorFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit): ?> / <?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?></span>
				</div>
			<?php } ?>
			<div class="finalPrice">
                <?php
                    /*
                     * Either a variant is selected or, if it isn't, the product does not have different variant prices. In both cases we have a precise price to display
                     */
                    if ($this->objProduct->_variantIsSelected || !$this->objProduct->_unscaledPricesAreDifferent) {
                        ?>
                        <?php echo $obj_tmp_productOrVariant->_unscaledPriceAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit): ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?>
                        <?php
                    }

                    /*
                     * No variant is selected and the product has different variant prices which means that we have to show something like "from [minimum price]"
                     */
                    else {
                        ?>
                        <?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['from']; ?> <?php echo $obj_tmp_productOrVariant->_unscaledPriceMinimumAfterTaxFormatted; ?><?php if ($this->objProduct->_hasQuantityUnit): ?>/<?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?>
                        <?php
                    }
                ?>
			</div>
            <div class="quantityComparison">
                <?php
                /*
                 * Either a variant is selected or, if it isn't, the product does not have different variant prices. In both cases we have a precise price to display
                 */
                if ($this->objProduct->_variantIsSelected || !$this->objProduct->_unscaledPricesAreDifferent) {
                    ?>
                    <?php echo $obj_tmp_productOrVariant->_getQuantityComparisonText('_unscaledPriceAfterTax'); ?>
                    <?php
                }

                /*
                 * No variant is selected and the product has different variant prices which means that we have to show something like "from [minimum price]"
                 */
                else {
                    ?>
                    <?php echo $obj_tmp_productOrVariant->_getQuantityComparisonText('_unscaledPriceMinimumAfterTax'); ?>
                    <?php
                }
                ?>
            </div>
		</div>
		<?php // <- unscaled price output ?>
		
		<?php // scale price information -> ?>
		<?php
			if (
					(
							// we have a configuration which affects the price
							$obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator
						&&	(
									(
											// a variant is selected and either the product or the variant use scale prices and we have a price scale output array
											$this->objProduct->_variantIsSelected
										&&	($this->objProduct->_useScalePrice || $this->objProduct->_selectedVariant->_useScalePrice)
										&&	is_array($this->objProduct->_selectedVariant->_scalePricesOutput)
									)
								||	(
											// no variant is selected and the product uses scale prices and we have a price scale output array
											!$this->objProduct->_variantIsSelected
										&&	$this->objProduct->_useScalePrice
										&&	is_array($this->objProduct->_scalePricesOutput)
									)
								
							)
					)
				||	(
							// we have no configuration or the configuration doesn't affect the price
							!$obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator
						&&	(
									(
											// a variant is selected and either the product or the variant use scale prices and we have a price scale output array							
											$this->objProduct->_variantIsSelected
										&&	($this->objProduct->_useScalePrice || $this->objProduct->_selectedVariant->_useScalePrice)
										&&	is_array($this->objProduct->_selectedVariant->_scalePricesOutputUnconfigured)
									)
								||	(
											// no variant is selected and the product does not have variants, it uses scale prices and we have a price scale output array
											!$this->objProduct->_variantIsSelected
										&&	!$this->objProduct->_hasVariants
										&&	$this->objProduct->_useScalePrice
										&&	is_array($this->objProduct->_scalePricesOutputUnconfigured)
									)
								
							)
					)
			) {
				?>
				<section
                        class="scale-prices"
                        data-lsjs-component="elementFolder"
                        data-lsjs-elementFolderOptions="
                         {
                            str_initialCookieStatus: 'closed'
                         }
                         "
                        id="scalePrices_<?php echo $this->objProduct->_id; ?>"
                >
					<div data-lsjs-element="elementFolderToggler"><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['showScalePrices']; ?></div>
					<div data-lsjs-element="elementFolderContent">
						<div class="scalePriceInformation <?php echo $obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator ? 'pricesInfluencedByConfigurator' : 'pricesNotInfluencedByConfigurator'; ?>">
							<?php
							$count = 1;
							foreach ($obj_tmp_productOrVariant->_scalePricesOutput as $arrStep) {
								$count++;
								?>
								<div class="scalePriceStep <?php echo ($count % 2 ? 'odd' : 'even').($count == 1 ? ' first' : '').($count == count($obj_tmp_productOrVariant->_scalePricesOutput) + 1 ? ' last' : ''); ?>">
									<div class="scalePriceStepMinQuantity">
                                        <?php echo $arrStep['minQuantity']; ?>
									</div>
                                    <div class="scalePriceStepPrice">
                                        <?php
                                        if (
                                            // we have a configuration which affects the price
                                            $obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator
                                        ) {
                                            ?>
                                            <div class="basePrice">
                                                <span class="label"><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['basePrice']; ?>:</span>
                                                <span class="value"><?php echo $arrStep['priceUnconfigured']; ?><?php if ($this->objProduct->_hasQuantityUnit): ?> / <?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?></span>
                                            </div>
                                            <div class="configuratorPrice">
                                                <span class="label"><?php echo $GLOBALS['TL_LANG']['MSC']['ls_shop']['misc']['configuratorPrice']; ?>:</span>
                                                <span class="value"><?php echo $arrStep['priceConfigurator']; ?><?php if ($this->objProduct->_hasQuantityUnit): ?> / <?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?></span>
                                            </div>
                                        <?php } ?>
                                        <div class="finalPrice">
                                            <?php
                                            if (
                                                // we have a configuration which affects the price
                                                $obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator
                                            ) {
                                                ?>
                                                <?php echo $arrStep['priceConfigured']; ?><?php if ($this->objProduct->_hasQuantityUnit): ?> / <?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?>
                                            <?php } else { ?>
                                                <?php echo $arrStep['priceUnconfigured']; ?><?php if ($this->objProduct->_hasQuantityUnit): ?> / <?php echo $this->objProduct->_quantityUnit; ?><?php endif; ?>
                                            <?php } ?>
                                        </div>
                                        <div class="quantityComparison">
                                            <?php
                                            if (
                                                // we have a configuration which affects the price
                                                $obj_tmp_productOrVariant->_unscaledPriceModificationByConfigurator
                                            ) {
                                                ?>
                                                <?php
                                                if ($obj_tmp_productOrVariant->_hasQuantityComparisonUnit) {
                                                    ?>
                                                    <?php echo $obj_tmp_productOrVariant->_getQuantityComparisonText((float) $arrStep['priceConfiguredUnformatted']); ?>
                                                    <?php
                                                }
                                                ?>
                                            <?php } else { ?>
                                                <?php
                                                if ($obj_tmp_productOrVariant->_hasQuantityComparisonUnit) {
                                                    ?>
                                                    <?php echo $obj_tmp_productOrVariant->_getQuantityComparisonText((float) $arrStep['priceUnconfiguredUnformatted']); ?>
                                                    <?php
                                                }
                                                ?>
                                            <?php } ?>
                                        </div>
                                    </div>
								</div>
								<?php
							}
							?>
						</div>
					</div>
				</section>
				<?php
			}
		?>
		<?php // <- scale price information ?>
	</div>

    <div class="tax-and-shipping-info">
        <div class="taxInfo"><?php echo $obj_tmp_productOrVariant->_taxInfo; ?></div>
        <div class="shippingInfo"><?php echo $obj_tmp_productOrVariant->_shippingInfo; ?></div>
    </div>
	<?php if (($obj_tmp_productOrVariant->_objConfigurator->arrData['stayInDataEntryMode'] ?? null) || !$obj_tmp_productOrVariant->_configuratorInDataEntryMode) { ?>
		<?php
        if (
            (
                $obj_tmp_productOrVariant->_isPreorderable
                || $obj_tmp_productOrVariant->_isAvailableBasedOnDate
            )
            && $obj_tmp_productOrVariant->_orderAllowed
            && $obj_tmp_productOrVariant->_hasQuantityInput
        ) {
            ?>
			<?= $obj_tmp_productOrVariant->_quantityInput ?>
            <?php
        }
        ?>
	<?php } ?>
</div>

<?php # echo $this->objProduct->_priceControl; ?>